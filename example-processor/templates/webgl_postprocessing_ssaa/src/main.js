import "./style.css"; // For webpack support

import {
  Vector3,
  Vector3,
  Vector3,
  Vector3,
  Vector3,
  Vector3,
  Vector3,
  Vector3,
  Vector3,
  Vector3,
  Vector3,
  Vector3,
  Scene,
  Color,
  Fog,
  PerspectiveCamera,
  AmbientLight,
  DirectionalLight,
  TextureLoader,
  MeshLambertMaterial,
  DoubleSide,
  ParametricBufferGeometry,
  Mesh,
  SphereGeometry,
  MeshLambertMaterial,
  Mesh,
  RepeatWrapping,
  sRGBEncoding,
  MeshLambertMaterial,
  Mesh,
  PlaneGeometry,
  BoxGeometry,
  MeshLambertMaterial,
  Mesh,
  Mesh,
  Mesh,
  BoxGeometry,
  BoxGeometry,
  Mesh,
  Mesh,
  WebGLRenderer,
  sRGBEncoding,
  PerspectiveCamera,
  Scene,
  AmbientLight,
  SpotLight,
  DirectionalLight,
  Plane,
  Vector3,
  Plane,
  Vector3,
  MeshPhongMaterial,
  DoubleSide,
  TorusKnotGeometry,
  Mesh,
  Mesh,
  PlaneGeometry,
  MeshPhongMaterial,
  WebGLRenderer,
  Plane,
  Plane,
  Vector3,
  Vector3,
  Vector3,
  Matrix4,
  Vector3,
  Vector3,
  Vector3,
  Vector3,
  PerspectiveCamera,
  Scene,
  AmbientLight,
  SpotLight,
  DirectionalLight,
  MeshPhongMaterial,
  DoubleSide,
  Group,
  BoxGeometry,
  Mesh,
  PlaneGeometry,
  Color,
  Group,
  MeshBasicMaterial,
  DoubleSide,
  Mesh,
  Mesh,
  MeshPhongMaterial,
  WebGLRenderer,
  Matrix4,
  Matrix4,
  Plane,
  Vector3,
  Plane,
  Vector3,
  Plane,
  Vector3,
  WebGLRenderer,
  Scene,
  PerspectiveCamera,
  HemisphereLight,
  CameraHelper,
  Group,
  SphereGeometry,
  MeshLambertMaterial,
  Color,
  DoubleSide,
  Mesh,
  Group,
  PlaneHelper,
  PlaneHelper,
  PlaneHelper,
  Group,
  MeshBasicMaterial,
  AlwaysStencilFunc,
  BackSide,
  IncrementWrapStencilOp,
  IncrementWrapStencilOp,
  IncrementWrapStencilOp,
  Mesh,
  FrontSide,
  DecrementWrapStencilOp,
  DecrementWrapStencilOp,
  DecrementWrapStencilOp,
  Mesh,
  Clock,
  Scene,
  PerspectiveCamera,
  AmbientLight,
  DirectionalLight,
  Plane,
  Vector3,
  Plane,
  Vector3,
  Plane,
  Vector3,
  PlaneHelper,
  TorusKnotGeometry,
  Group,
  PlaneGeometry,
  Group,
  MeshStandardMaterial,
  NotEqualStencilFunc,
  ReplaceStencilOp,
  ReplaceStencilOp,
  ReplaceStencilOp,
  Mesh,
  MeshStandardMaterial,
  DoubleSide,
  Mesh,
  Mesh,
  PlaneGeometry,
  ShadowMaterial,
  DoubleSide,
  WebGLRenderer,
  Vector3,
  Vector3,
  Vector2,
  TextureLoader,
  MeshPhongMaterial,
  Vector2,
  Vector3,
  Euler,
  Vector3,
  WebGLRenderer,
  Scene,
  PerspectiveCamera,
  AmbientLight,
  DirectionalLight,
  DirectionalLight,
  BufferGeometry,
  Vector3,
  Vector3,
  Line,
  LineBasicMaterial,
  Raycaster,
  Mesh,
  BoxGeometry,
  MeshNormalMaterial,
  MeshPhongMaterial,
  Mesh,
  DepthFormat,
  UnsignedShortType,
  DepthFormat,
  DepthStencilFormat,
  UnsignedShortType,
  UnsignedIntType,
  UnsignedInt248Type,
  WebGLRenderer,
  PerspectiveCamera,
  WebGLRenderTarget,
  RGBFormat,
  NearestFilter,
  NearestFilter,
  DepthStencilFormat,
  DepthTexture,
  OrthographicCamera,
  ShaderMaterial,
  PlaneGeometry,
  Mesh,
  Scene,
  Scene,
  TorusKnotGeometry,
  MeshBasicMaterial,
  Mesh,
  Vector2,
  Color,
  PerspectiveCamera,
  OrthographicCamera,
  Scene,
  Scene,
  BufferGeometry,
  Float32BufferAttribute,
  BufferAttribute,
  DynamicDrawUsage,
  LineBasicMaterial,
  Line,
  DataTexture,
  RGBFormat,
  NearestFilter,
  NearestFilter,
  SpriteMaterial,
  Sprite,
  WebGLRenderer,
  Scene,
  Color,
  Scene,
  PerspectiveCamera,
  OrthographicCamera,
  Sprite,
  SpriteMaterial,
  CanvasTexture,
  Mesh,
  MeshLambertMaterial,
  DoubleSide,
  PointLight,
  WebGLRenderer,
  BufferGeometryLoader,
  Float32BufferAttribute,
  PerspectiveCamera,
  Scene,
  Color,
  AmbientLight,
  DirectionalLight,
  Group,
  Vector4,
  MathUtils,
  BufferGeometry,
  LineBasicMaterial,
  Line,
  BufferGeometry,
  LineBasicMaterial,
  Line,
  Vector4,
  Vector4,
  Vector4,
  Vector4,
  Vector4,
  Vector4,
  Vector4,
  Vector4,
  Vector4,
  Vector4,
  Vector4,
  Vector4,
  TextureLoader,
  RepeatWrapping,
  ParametricBufferGeometry,
  MeshLambertMaterial,
  DoubleSide,
  Mesh,
  WebGLRenderer,
  Vector3,
  Raycaster,
  Vector2,
  Vector2,
  Vector2,
  BoxGeometry,
  Scene,
  Color,
  PerspectiveCamera,
  AmbientLight,
  SpotLight,
  PlaneGeometry,
  ShadowMaterial,
  Mesh,
  GridHelper,
  WebGLRenderer,
  BufferGeometry,
  BufferAttribute,
  CatmullRomCurve3,
  Line,
  LineBasicMaterial,
  CatmullRomCurve3,
  Line,
  LineBasicMaterial,
  CatmullRomCurve3,
  Line,
  LineBasicMaterial,
  Vector3,
  Vector3,
  Vector3,
  Vector3,
  MeshLambertMaterial,
  Mesh,
  Vector3,
  Clock,
  PerspectiveCamera,
  Scene,
  Color,
  FogExp2,
  PlaneGeometry,
  CanvasTexture,
  ClampToEdgeWrapping,
  ClampToEdgeWrapping,
  Mesh,
  MeshBasicMaterial,
  WebGLRenderer,
  Vector3,
  Vector3,
  Cache,
  PerspectiveCamera,
  Vector3,
  Scene,
  Color,
  Fog,
  DirectionalLight,
  PointLight,
  MeshPhongMaterial,
  MeshPhongMaterial,
  Group,
  Mesh,
  PlaneGeometry,
  MeshBasicMaterial,
  WebGLRenderer,
  FontLoader,
  TextGeometry,
  Mesh,
  Mesh,
  PerspectiveCamera,
  Scene,
  Color,
  FontLoader,
  LineBasicMaterial,
  DoubleSide,
  MeshBasicMaterial,
  DoubleSide,
  ShapeGeometry,
  Mesh,
  Object3D,
  BufferGeometry,
  Line,
  WebGLRenderer,
  PerspectiveCamera,
  Scene,
  Color,
  FontLoader,
  Color,
  MeshBasicMaterial,
  DoubleSide,
  MeshBasicMaterial,
  DoubleSide,
  ShapeGeometry,
  Mesh,
  Group,
  Mesh,
  WebGLRenderer,
  WebGLRenderer,
  PerspectiveCamera,
  Scene,
  PointLight,
  PointLightHelper,
  GridHelper,
  PolarGridHelper,
  Group,
  BoxHelper,
  WireframeGeometry,
  LineSegments,
  BoxHelper,
  EdgesGeometry,
  LineSegments,
  BoxHelper,
  BoxHelper,
  BoxHelper,
  Vector3,
  Euler,
  Quaternion,
  Vector3,
  BufferGeometryLoader,
  MeshNormalMaterial,
  Matrix4,
  InstancedMesh,
  Matrix4,
  Mesh,
  Matrix4,
  Mesh,
  PerspectiveCamera,
  WebGLRenderer,
  sRGBEncoding,
  Scene,
  Color,
  PerspectiveCamera,
  Scene,
  Color,
  Fog,
  AmbientLight,
  DirectionalLight,
  DirectionalLight,
  BufferGeometry,
  Color,
  Vector3,
  Vector3,
  Vector3,
  Vector3,
  Vector3,
  BufferAttribute,
  BufferAttribute,
  BufferAttribute,
  MeshPhongMaterial,
  DoubleSide,
  Mesh,
  Raycaster,
  Vector2,
  BufferGeometry,
  BufferAttribute,
  LineBasicMaterial,
  Line,
  WebGLRenderer,
  Vector2,
  PerspectiveCamera,
  Scene,
  Color,
  DirectionalLight,
  BoxGeometry,
  Mesh,
  MeshLambertMaterial,
  Raycaster,
  WebGLRenderer,
  MathUtils,
  MathUtils,
  MathUtils,
  Vector2,
  Vector3,
  PerspectiveCamera,
  Scene,
  Color,
  Scene,
  WebGLRenderTarget,
  AmbientLight,
  SpotLight,
  MeshBasicMaterial,
  MeshPhongMaterial,
  Float32BufferAttribute,
  Matrix4,
  Quaternion,
  Color,
  BoxGeometry,
  Vector3,
  Euler,
  Vector3,
  Mesh,
  Mesh,
  Mesh,
  BoxGeometry,
  MeshLambertMaterial,
  WebGLRenderer,
  Vector2,
  OrthographicCamera,
  Scene,
  Color,
  DirectionalLight,
  BoxGeometry,
  Mesh,
  MeshLambertMaterial,
  Raycaster,
  WebGLRenderer,
  MathUtils,
  MathUtils,
  MathUtils,
  Vector2,
  PerspectiveCamera,
  Scene,
  Color,
  SphereGeometry,
  MeshBasicMaterial,
  Mesh,
  BufferGeometry,
  Vector3,
  Vector3,
  Float32BufferAttribute,
  Object3D,
  LineBasicMaterial,
  Line,
  LineSegments,
  Raycaster,
  WebGLRenderer,
  MathUtils,
  MathUtils,
  MathUtils,
  Scene,
  PerspectiveCamera,
  BoxGeometry,
  Color,
  BufferGeometry,
  Float32BufferAttribute,
  Float32BufferAttribute,
  ShaderMaterial,
  Color,
  TextureLoader,
  Points,
  WebGLRenderer,
  Raycaster,
  Vector2,
  Vector2,
  Matrix4,
  BufferGeometry,
  BufferAttribute,
  BufferAttribute,
  PointsMaterial,
  Points,
  BufferAttribute,
  PointsMaterial,
  Points,
  BufferAttribute,
  PointsMaterial,
  Points,
  Scene,
  Clock,
  PerspectiveCamera,
  Color,
  Color,
  Color,
  SphereGeometry,
  MeshBasicMaterial,
  Mesh,
  WebGLRenderer,
  Raycaster,
  PerspectiveCamera,
  Scene,
  Color,
  BoxGeometry,
  MeshBasicMaterial,
  Mesh,
  BoxGeometry,
  MeshLambertMaterial,
  TextureLoader,
  GridHelper,
  Raycaster,
  Vector2,
  PlaneGeometry,
  Mesh,
  MeshBasicMaterial,
  AmbientLight,
  DirectionalLight,
  WebGLRenderer,
  Mesh,
  PerspectiveCamera,
  Scene,
  Color,
  PointLight,
  BoxGeometry,
  Mesh,
  MeshLambertMaterial,
  WebGLRenderer,
  MathUtils,
  MathUtils,
  MathUtils,
  Clock,
  PerspectiveCamera,
  Scene,
  Color,
  Fog,
  HemisphereLight,
  HemisphereLightHelper,
  DirectionalLight,
  DirectionalLightHelper,
  PlaneGeometry,
  MeshLambertMaterial,
  Mesh,
  Color,
  Color,
  SphereGeometry,
  ShaderMaterial,
  BackSide,
  Mesh,
  AnimationMixer,
  WebGLRenderer,
  sRGBEncoding,
  Clock,
  PerspectiveCamera,
  Scene,
  SphereGeometry,
  PointLight,
  Mesh,
  MeshBasicMaterial,
  PointLight,
  Mesh,
  MeshBasicMaterial,
  PointLight,
  Mesh,
  MeshBasicMaterial,
  PointLight,
  Mesh,
  MeshBasicMaterial,
  WebGLRenderer,
  WebGLRenderer,
  Scene,
  PerspectiveCamera,
  PerspectiveCamera,
  Color,
  Vector3,
  CatmullRomCurve3,
  Vector3,
  Color,
  Line,
  BufferGeometry,
  LineBasicMaterial,
  BufferGeometry,
  Float32BufferAttribute,
  Float32BufferAttribute,
  LineBasicMaterial,
  LineDashedMaterial,
  Line,
  PerspectiveCamera,
  Vector3,
  Scene,
  Color,
  Fog,
  DirectionalLight,
  PointLight,
  MeshPhongMaterial,
  Group,
  Font,
  Mesh,
  PlaneGeometry,
  MeshBasicMaterial,
  WebGLRenderer,
  TextGeometry,
  Mesh,
  Mesh,
  Vector3,
  Scene,
  Color,
  PerspectiveCamera,
  DirectionalLight,
  DirectionalLight,
  Group,
  WebGLRenderer,
  BoxGeometry,
  IcosahedronGeometry,
  Vector3,
  Color,
  MeshPhongMaterial,
  Mesh,
  Vector3,
  Vector3,
  Mesh,
  MeshPhongMaterial,
  PerspectiveCamera,
  WebGLRenderer,
  ACESFilmicToneMapping,
  PMREMGenerator,
  Scene,
  Color,
  Box3,
  Vector3,
  Vector3,
  Clock,
  PerspectiveCamera,
  Scene,
  Fog,
  PointLight,
  DirectionalLight,
  IcosahedronGeometry,
  IcosahedronGeometry,
  IcosahedronGeometry,
  IcosahedronGeometry,
  IcosahedronGeometry,
  MeshLambertMaterial,
  LOD,
  Mesh,
  WebGLRenderer,
  TextureLoader,
  PerspectiveCamera,
  Scene,
  CanvasTexture,
  RepeatWrapping,
  RepeatWrapping,
  MeshBasicMaterial,
  Mesh,
  PlaneGeometry,
  NoBlending,
  NormalBlending,
  AdditiveBlending,
  SubtractiveBlending,
  MultiplyBlending,
  PlaneGeometry,
  PlaneGeometry,
  MeshBasicMaterial,
  Mesh,
  Mesh,
  WebGLRenderer,
  CanvasTexture,
  MeshBasicMaterial,
  PerspectiveCamera,
  Scene,
  TextureLoader,
  CanvasTexture,
  RepeatWrapping,
  CanvasTexture,
  RepeatWrapping,
  RepeatWrapping,
  RepeatWrapping,
  RepeatWrapping,
  RepeatWrapping,
  RepeatWrapping,
  MeshBasicMaterial,
  Mesh,
  PlaneGeometry,
  ZeroFactor,
  OneFactor,
  SrcColorFactor,
  OneMinusSrcColorFactor,
  SrcAlphaFactor,
  OneMinusSrcAlphaFactor,
  DstAlphaFactor,
  OneMinusDstAlphaFactor,
  DstColorFactor,
  OneMinusDstColorFactor,
  SrcAlphaSaturateFactor,
  ZeroFactor,
  OneFactor,
  SrcColorFactor,
  OneMinusSrcColorFactor,
  SrcAlphaFactor,
  OneMinusSrcAlphaFactor,
  DstAlphaFactor,
  OneMinusDstAlphaFactor,
  DstColorFactor,
  OneMinusDstColorFactor,
  PlaneGeometry,
  PlaneGeometry,
  MeshBasicMaterial,
  CustomBlending,
  AddEquation,
  Mesh,
  Mesh,
  Mesh,
  WebGLRenderer,
  AddEquation,
  SubtractEquation,
  ReverseSubtractEquation,
  MinEquation,
  MaxEquation,
  CanvasTexture,
  MeshBasicMaterial,
  FrontSide,
  BackSide,
  DoubleSide,
  WebGLRenderer,
  Scene,
  PerspectiveCamera,
  OrthographicCamera,
  AmbientLight,
  PointLight,
  PointLight,
  PointLight,
  TextureLoader,
  MeshStandardMaterial,
  Vector2,
  DoubleSide,
  MeshDepthMaterial,
  BasicDepthPacking,
  DoubleSide,
  MeshDepthMaterial,
  RGBADepthPacking,
  DoubleSide,
  MeshNormalMaterial,
  Vector2,
  DoubleSide,
  Mesh,
  FrontSide,
  BackSide,
  DoubleSide,
  CubeTextureLoader,
  LinearMipMapLinearFilter,
  LinearFilter,
  PerspectiveCamera,
  Scene,
  SphereGeometry,
  MeshBasicMaterial,
  Mesh,
  Mesh,
  WebGLRenderer,
  PerspectiveCamera,
  Scene,
  Color,
  WebGLRenderer,
  ACESFilmicToneMapping,
  TorusKnotGeometry,
  SphereGeometry,
  MeshStandardMaterial,
  Mesh,
  PlaneGeometry,
  MeshBasicMaterial,
  Mesh,
  DefaultLoadingManager,
  UnsignedByteType,
  LinearFilter,
  CubeTextureLoader,
  sRGBEncoding,
  RGBM16Encoding,
  PMREMGenerator,
  sRGBEncoding,
  PerspectiveCamera,
  Scene,
  DirectionalLight,
  Color,
  Color,
  SphereGeometry,
  ShaderMaterial,
  BackSide,
  Mesh,
  WebGLRenderer,
  sRGBEncoding,
  ObjectLoader,
  PerspectiveCamera,
  Scene,
  Group,
  SphereGeometry,
  TextureLoader,
  sRGBEncoding,
  RepeatWrapping,
  RepeatWrapping,
  RepeatWrapping,
  RepeatWrapping,
  CanvasTexture,
  RepeatWrapping,
  RepeatWrapping,
  MeshPhysicalMaterial,
  Vector2,
  Mesh,
  MeshPhysicalMaterial,
  Mesh,
  MeshPhysicalMaterial,
  Vector2,
  Mesh,
  MeshPhysicalMaterial,
  Vector2,
  Vector2,
  Mesh,
  Mesh,
  SphereGeometry,
  MeshBasicMaterial,
  PointLight,
  WebGLRenderer,
  ACESFilmicToneMapping,
  sRGBEncoding,
  EquirectangularReflectionMapping,
  WebGLRenderer,
  ACESFilmicToneMapping,
  sRGBEncoding,
  Scene,
  PerspectiveCamera,
  SphereGeometry,
  CanvasTexture,
  NearestFilter,
  RepeatWrapping,
  RepeatWrapping,
  MeshPhysicalMaterial,
  DoubleSide,
  Mesh,
  WebGLRenderer,
  sRGBEncoding,
  ReinhardToneMapping,
  Scene,
  PerspectiveCamera,
  HemisphereLight,
  MeshStandardMaterial,
  TextureLoader,
  sRGBEncoding,
  RepeatWrapping,
  RepeatWrapping,
  RepeatWrapping,
  RepeatWrapping,
  EquirectangularReflectionMapping,
  Vector2,
  PerspectiveCamera,
  Scene,
  MeshBasicMaterial,
  Mesh,
  BoxGeometry,
  WebGLRenderer,
  CanvasTexture,
  PerspectiveCamera,
  Scene,
  Color,
  Fog,
  Scene,
  Color,
  Fog,
  CanvasTexture,
  RepeatWrapping,
  RepeatWrapping,
  NearestFilter,
  NearestFilter,
  MeshBasicMaterial,
  MeshBasicMaterial,
  PlaneGeometry,
  Mesh,
  Mesh,
  PlaneGeometry,
  Mesh,
  Mesh,
  Mesh,
  MeshBasicMaterial,
  Mesh,
  MeshBasicMaterial,
  TextureLoader,
  Texture,
  MeshBasicMaterial,
  MeshBasicMaterial,
  NearestFilter,
  LinearFilter,
  UVMapping,
  WebGLRenderer,
  PerspectiveCamera,
  Scene,
  Color,
  Fog,
  Scene,
  Color,
  Fog,
  CanvasTexture,
  RepeatWrapping,
  RepeatWrapping,
  NearestFilter,
  NearestMipmapNearestFilter,
  MeshBasicMaterial,
  MeshBasicMaterial,
  PlaneGeometry,
  Mesh,
  Mesh,
  PlaneGeometry,
  Mesh,
  Mesh,
  Mesh,
  MeshBasicMaterial,
  Mesh,
  MeshBasicMaterial,
  TextureLoader,
  Texture,
  MeshBasicMaterial,
  MeshBasicMaterial,
  NearestFilter,
  LinearFilter,
  UVMapping,
  WebGLRenderer,
  PerspectiveCamera,
  Scene,
  AmbientLight,
  DirectionalLight,
  Mesh,
  SphereGeometry,
  MeshBasicMaterial,
  PointLight,
  Mesh,
  SphereGeometry,
  MeshBasicMaterial,
  PointLight,
  WebGLRenderer,
  sRGBEncoding,
  TextureLoader,
  RepeatWrapping,
  UniformsUtils,
  Vector3,
  Vector3,
  ShaderMaterial,
  WebGLRenderer,
  Scene,
  PerspectiveCamera,
  BufferGeometryLoader,
  MeshBasicMaterial,
  Mesh,
  ShaderMaterial,
  DoubleSide,
  Mesh,
  Vector3,
  Vector3,
  Vector3,
  BufferAttribute,
  Vector2,
  PerspectiveCamera,
  Scene,
  Color,
  Clock,
  Raycaster,
  HemisphereLight,
  Vector3,
  BoxGeometry,
  Mesh,
  MeshLambertMaterial,
  Mesh,
  MeshBasicMaterial,
  WebGLRenderer,
  Vector3,
  Spherical,
  Matrix4,
  Quaternion,
  Clock,
  PerspectiveCamera,
  Scene,
  ConeGeometry,
  MeshNormalMaterial,
  Mesh,
  SphereGeometry,
  MeshBasicMaterial,
  Mesh,
  SphereGeometry,
  MeshBasicMaterial,
  Mesh,
  WebGLRenderer,
  WebGLRenderer,
  Scene,
  PerspectiveCamera,
  PlaneGeometry,
  CircleGeometry,
  PlaneGeometry,
  Object3D,
  CylinderGeometry,
  MeshPhongMaterial,
  Mesh,
  SphereGeometry,
  Mesh,
  IcosahedronGeometry,
  MeshPhongMaterial,
  Mesh,
  Mesh,
  MeshPhongMaterial,
  Mesh,
  MeshPhongMaterial,
  Mesh,
  MeshPhongMaterial,
  Mesh,
  MeshPhongMaterial,
  Mesh,
  MeshPhongMaterial,
  PointLight,
  PointLight,
  PointLight,
  PointLight,
  WebGLRenderer,
  Scene,
  PerspectiveCamera,
  PlaneGeometry,
  Plane,
  Vector3,
  IcosahedronGeometry,
  MeshPhongMaterial,
  Mesh,
  Mesh,
  PerspectiveCamera,
  CameraHelper,
  Vector3,
  Vector3,
  Vector3,
  Vector3,
  WebGLRenderTarget,
  LinearFilter,
  LinearFilter,
  RGBFormat,
  Mesh,
  MeshBasicMaterial,
  WebGLRenderTarget,
  LinearFilter,
  LinearFilter,
  RGBFormat,
  Mesh,
  MeshBasicMaterial,
  Mesh,
  MeshPhongMaterial,
  Mesh,
  MeshPhongMaterial,
  Mesh,
  MeshPhongMaterial,
  Mesh,
  MeshPhongMaterial,
  Mesh,
  MeshPhongMaterial,
  Mesh,
  MeshPhongMaterial,
  PointLight,
  PointLight,
  PointLight,
  PointLight,
  PerspectiveCamera,
  Scene,
  Color,
  DirectionalLight,
  DirectionalLight,
  AnimationMixer,
  WebGLRenderer,
  sRGBEncoding,
  MathUtils,
  MathUtils,
  BoxGeometry,
  SphereGeometry,
  DodecahedronGeometry,
  CylinderGeometry,
  Scene,
  PerspectiveCamera,
  MeshStandardMaterial,
  Color,
  Mesh,
  HemisphereLight,
  DirectionalLight,
  WebGLRenderer,
  WebGLRenderer,
  Scene,
  Color,
  BufferGeometry,
  BufferGeometry,
  Float32BufferAttribute,
  Float32BufferAttribute,
  CanvasTexture,
  PointsMaterial,
  Points,
  PerspectiveCamera,
  Vector3,
  Vector3,
  WebGLRenderer,
  Scene,
  PerspectiveCamera,
  MeshBasicMaterial,
  Mesh,
  BoxGeometry,
  Texture,
  ImageLoader,
  PerspectiveCamera,
  Scene,
  SphereGeometry,
  TextureLoader,
  MeshBasicMaterial,
  Mesh,
  WebGLRenderer,
  MathUtils,
  MathUtils,
  MathUtils,
  PerspectiveCamera,
  Scene,
  FogExp2,
  BufferGeometry,
  TextureLoader,
  Float32BufferAttribute,
  PointsMaterial,
  Points,
  WebGLRenderer,
  Clock,
  PerspectiveCamera,
  Scene,
  Color,
  FogExp2,
  WebGLRenderer,
  Object3D,
  Points,
  PlaneGeometry,
  PointsMaterial,
  BufferAttribute,
  BufferGeometry,
  DynamicDrawUsage,
  Points,
  PointsMaterial,
  PerspectiveCamera,
  Scene,
  FogExp2,
  BufferGeometry,
  TextureLoader,
  Float32BufferAttribute,
  PointsMaterial,
  AdditiveBlending,
  Points,
  WebGLRenderer,
  Points,
  PerspectiveCamera,
  Scene,
  BufferGeometry,
  BufferAttribute,
  BufferAttribute,
  ShaderMaterial,
  Color,
  Points,
  WebGLRenderer,
  OrthographicCamera,
  Scene,
  Scene,
  DirectionalLight,
  DirectionalLight,
  WebGLRenderTarget,
  LinearFilter,
  NearestFilter,
  RGBAFormat,
  FloatType,
  ShaderMaterial,
  ShaderMaterial,
  PlaneGeometry,
  Mesh,
  TorusGeometry,
  MeshPhongMaterial,
  MeshPhongMaterial,
  Mesh,
  Mesh,
  Mesh,
  WebGLRenderer,
  Clock,
  WebGLRenderer,
  Scene,
  PerspectiveCamera,
  PlaneGeometry,
  TextureLoader,
  RepeatWrapping,
  IcosahedronGeometry,
  MeshPhongMaterial,
  Mesh,
  PlaneGeometry,
  Mesh,
  MeshPhongMaterial,
  Mesh,
  MeshPhongMaterial,
  Mesh,
  MeshPhongMaterial,
  Mesh,
  MeshPhongMaterial,
  Mesh,
  MeshPhongMaterial,
  PointLight,
  PointLight,
  PointLight,
  PointLight,
  PerspectiveCamera,
  OrthographicCamera,
  Scene,
  Scene,
  Scene,
  DirectionalLight,
  DirectionalLight,
  WebGLRenderTarget,
  LinearFilter,
  NearestFilter,
  RGBFormat,
  ShaderMaterial,
  ShaderMaterial,
  PlaneGeometry,
  Mesh,
  TorusGeometry,
  MeshPhongMaterial,
  MeshPhongMaterial,
  Mesh,
  Mesh,
  Mesh,
  SphereGeometry,
  MeshBasicMaterial,
  Mesh,
  WebGLRenderer,
  WebGLRenderer,
  ACESFilmicToneMapping,
  Scene,
  PerspectiveCamera,
  Vector3,
  PlaneGeometry,
  TextureLoader,
  RepeatWrapping,
  Vector3,
  PMREMGenerator,
  MathUtils,
  MathUtils,
  BoxGeometry,
  MeshStandardMaterial,
  Mesh,
  Vector3,
  MathUtils,
  MathUtils,
  PerspectiveCamera,
  Scene,
  GridHelper,
  WebGLRenderer,
  sRGBEncoding,
  ACESFilmicToneMapping,
  PerspectiveCamera,
  PerspectiveCamera,
  OrthographicCamera,
  Scene,
  Scene,
  Scene,
  AmbientLight,
  DirectionalLight,
  BackSide,
  AdditiveBlending,
  UniformsUtils,
  UniformsLib,
  UniformsLib,
  ShaderChunk,
  ShaderChunk,
  ShaderChunk,
  ShaderChunk,
  ShaderChunk,
  ShaderChunk,
  ShaderChunk,
  ShaderMaterial,
  MeshPhongMaterial,
  TextureLoader,
  sRGBEncoding,
  sRGBEncoding,
  sRGBEncoding,
  MeshBasicMaterial,
  AdditiveBlending,
  sRGBEncoding,
  MeshLambertMaterial,
  NormalBlending,
  SphereGeometry,
  Mesh,
  Mesh,
  Mesh,
  Mesh,
  ShaderMaterial,
  NoBlending,
  ShaderMaterial,
  NoBlending,
  Mesh,
  PlaneGeometry,
  Mesh,
  PlaneGeometry,
  CubeTextureLoader,
  sRGBEncoding,
  WebGLRenderer,
  LinearFilter,
  LinearFilter,
  RGBAFormat,
  WebGLRenderTarget,
  FloatType,
  WebGLRenderTarget,
  Clock,
  PerspectiveCamera,
  Scene,
  Fog,
  WebGLCubeRenderTarget,
  RGBFormat,
  LinearMipmapLinearFilter,
  sRGBEncoding,
  CubeCamera,
  TextureLoader,
  RepeatWrapping,
  NearestFilter,
  sRGBEncoding,
  RepeatWrapping,
  sRGBEncoding,
  RepeatWrapping,
  sRGBEncoding,
  MeshPhongMaterial,
  PlaneGeometry,
  Mesh,
  MeshPhongMaterial,
  MeshPhongMaterial,
  MeshPhongMaterial,
  SphereGeometry,
  TorusGeometry,
  BoxGeometry,
  MeshPhongMaterial,
  Mesh,
  BoxGeometry,
  BoxGeometry,
  BoxGeometry,
  BoxGeometry,
  BoxGeometry,
  SphereGeometry,
  AnimationMixer,
  AmbientLight,
  PointLight,
  DirectionalLight,
  CameraHelper,
  WebGLRenderer,
  PCFSoftShadowMap,
  sRGBEncoding,
  PerspectiveCamera,
  Scene,
  Color,
  BoxGeometry,
  IcosahedronGeometry,
  TorusKnotGeometry,
  MeshNormalMaterial,
  Mesh,
  Group,
  WebGLRenderTarget,
  WebGLRenderTarget,
  PlaneGeometry,
  MeshBasicMaterial,
  Mesh,
  Mesh,
  MeshBasicMaterial,
  Mesh,
  OrthographicCamera,
  CameraHelper,
  MeshDepthMaterial,
  ShaderMaterial,
  ShaderMaterial,
  Color,
  WebGLRenderer,
  PerspectiveCamera,
  Scene,
  AmbientLight,
  SpotLight,
  CameraHelper,
  DirectionalLight,
  CameraHelper,
  TorusKnotGeometry,
  MeshPhongMaterial,
  Mesh,
  BoxGeometry,
  Mesh,
  BoxGeometry,
  MeshPhongMaterial,
  Mesh,
  WebGLRenderer,
  BasicShadowMap,
  Clock,
  PerspectiveCamera,
  Scene,
  Color,
  Fog,
  Clock,
  PlaneGeometry,
  MeshPhongMaterial,
  Mesh,
  GridHelper,
  HemisphereLight,
  DirectionalLight,
  AnimationMixer,
  WebGLRenderer,
  NoToneMapping,
  LinearToneMapping,
  ReinhardToneMapping,
  CineonToneMapping,
  ACESFilmicToneMapping,
  CustomToneMapping,
  WebGLRenderer,
  sRGBEncoding,
  ShaderChunk,
  ShaderChunk,
  Scene,
  PerspectiveCamera,
  EquirectangularReflectionMapping,
  Clock,
  WebGLRenderer,
  Scene,
  PerspectiveCamera,
  TextureLoader,
  RepeatWrapping,
  AmbientLight,
  DirectionalLight,
  DirectionalLight,
  Mesh,
  WebGLRenderer,
  PerspectiveCamera,
  Scene,
  Fog,
  BoxGeometry,
  MeshNormalMaterial,
  Mesh,
  PerspectiveCamera,
  Scene,
  WebGLRenderer,
  CubeTextureLoader,
  MeshBasicMaterial,
  SphereGeometry,
  Mesh,
  Mesh,
  MeshBasicMaterial,
  Vector2,
  Raycaster,
  Vector3,
  PerspectiveCamera,
  Scene,
  WebGLRenderer,
  ShaderMaterial,
  CubeTextureLoader,
  PlaneGeometry,
  MeshPhongMaterial,
  DoubleSide,
  Mesh,
  BufferGeometryLoader,
  MeshPhongMaterial,
  Mesh,
  SphereGeometry,
  MeshPhongMaterial,
  Mesh,
  AmbientLight,
  DirectionalLight,
  DirectionalLight,
  Scene,
  OrthographicCamera,
  LinearFilter,
  LinearFilter,
  RGBFormat,
  WebGLRenderTarget,
  WebGLRenderTarget,
  UniformsUtils,
  ShaderMaterial,
  Mesh,
  PlaneGeometry,
  PerspectiveCamera,
  Scene,
  Color,
  Fog,
  Clock,
  HemisphereLight,
  DirectionalLight,
  Group,
  TetrahedronGeometry,
  MeshStandardMaterial,
  Mesh,
  WebGLRenderer,
  Vector3,
  Vector4,
  Vector3,
  PerspectiveCamera,
  Scene,
  MeshDepthMaterial,
  MeshBasicMaterial,
  SphereGeometry,
  Mesh,
  WebGLRenderer,
  Scene,
  OrthographicCamera,
  LinearFilter,
  LinearFilter,
  RGBFormat,
  WebGLRenderTarget,
  WebGLRenderTarget,
  WebGLRenderTarget,
  WebGLRenderTarget,
  WebGLRenderTarget,
  UniformsUtils,
  ShaderMaterial,
  UniformsUtils,
  ShaderMaterial,
  UniformsUtils,
  ShaderMaterial,
  UniformsUtils,
  ShaderMaterial,
  Mesh,
  PlaneGeometry,
  Mesh,
  WebGLRenderer,
  PerspectiveCamera,
  Scene,
  Color,
  Fog,
  Group,
  DirectionalLight,
  Mesh,
  PlaneBufferGeometry,
  MeshPhongMaterial,
  MeshPhongMaterial,
  Group,
  LoadingManager,
  WebGLRenderer,
  PerspectiveCamera,
  OrthographicCamera,
  MathUtils,
  Scene,
  Group,
  PointLight,
  PointLight,
  PointLight,
  AmbientLight,
  SphereGeometry,
  MeshStandardMaterial,
  Mesh,
} from "three";

import Stats from "three/examples/jsm/libs/stats.module.js";
import { GUI } from "three/examples/jsm/libs/dat.gui.module.js";

import { EffectComposer } from "three/examples/jsm/postprocessing/EffectComposer.js";
import { ShaderPass } from "three/examples/jsm/postprocessing/ShaderPass.js";
import { SSAARenderPass } from "three/examples/jsm/postprocessing/SSAARenderPass.js";
import { CopyShader } from "three/examples/jsm/shaders/CopyShader.js";

let scene, renderer, composer, copyPass;
let cameraP, ssaaRenderPassP;
let cameraO, ssaaRenderPassO;
let gui, stats;

const params = {
  sampleLevel: 4,
  renderToScreen: false,
  unbiased: true,
  camera: "perspective",
  clearColor: "black",
  clearAlpha: 1.0,
  viewOffsetX: 0,
  autoRotate: true,
};

init();
animate();

clearGui();

function clearGui() {
  if (gui) gui.destroy();

  gui = new GUI();

  gui.add(params, "unbiased");
  gui.add(params, "renderToScreen");
  gui.add(params, "sampleLevel", {
    "Level 0: 1 Sample": 0,
    "Level 1: 2 Samples": 1,
    "Level 2: 4 Samples": 2,
    "Level 3: 8 Samples": 3,
    "Level 4: 16 Samples": 4,
    "Level 5: 32 Samples": 5,
  });
  gui.add(params, "camera", ["perspective", "orthographic"]);
  gui.add(params, "clearColor", ["black", "white", "blue", "green", "red"]);
  gui.add(params, "clearAlpha", 0, 1);
  gui.add(params, "viewOffsetX", -100, 100);
  gui.add(params, "autoRotate");

  gui.open();
}

function init() {
  const container = document.getElementById("container");

  const width = window.innerWidth || 1;
  const height = window.innerHeight || 1;
  const aspect = width / height;
  const devicePixelRatio = window.devicePixelRatio || 1;

  renderer = new WebGLRenderer();
  renderer.setPixelRatio(devicePixelRatio);
  renderer.setSize(width, height);
  document.body.appendChild(renderer.domElement);

  stats = new Stats();
  container.appendChild(stats.dom);

  cameraP = new PerspectiveCamera(65, aspect, 3, 10);
  cameraP.position.z = 7;
  cameraP.setViewOffset(width, height, params.viewOffsetX, 0, width, height);

  cameraO = new OrthographicCamera(
    width / -2,
    width / 2,
    height / 2,
    height / -2,
    3,
    10
  );
  cameraO.position.z = 7;

  const fov = MathUtils.degToRad(cameraP.fov);
  const hyperfocus = (cameraP.near + cameraP.far) / 2;
  const _height = 2 * Math.tan(fov / 2) * hyperfocus;
  cameraO.zoom = height / _height;

  scene = new Scene();

  const group = new Group();
  scene.add(group);

  const light = new PointLight(0xddffdd, 1.0);
  light.position.z = 70;
  light.position.y = -70;
  light.position.x = -70;
  scene.add(light);

  const light2 = new PointLight(0xffdddd, 1.0);
  light2.position.z = 70;
  light2.position.x = -70;
  light2.position.y = 70;
  scene.add(light2);

  const light3 = new PointLight(0xddddff, 1.0);
  light3.position.z = 70;
  light3.position.x = 70;
  light3.position.y = -70;
  scene.add(light3);

  const light4 = new AmbientLight(0xffffff, 0.05);
  scene.add(light4);

  const geometry = new SphereGeometry(3, 48, 24);

  for (let i = 0; i < 120; i++) {
    const material = new MeshStandardMaterial();
    material.roughness = 0.5 * Math.random() + 0.25;
    material.metalness = 0;
    material.color.setHSL(Math.random(), 1.0, 0.3);

    const mesh = new Mesh(geometry, material);
    mesh.position.x = Math.random() * 4 - 2;
    mesh.position.y = Math.random() * 4 - 2;
    mesh.position.z = Math.random() * 4 - 2;
    mesh.rotation.x = Math.random();
    mesh.rotation.y = Math.random();
    mesh.rotation.z = Math.random();

    mesh.scale.setScalar(Math.random() * 0.2 + 0.05);
    group.add(mesh);
  }

  // postprocessing

  composer = new EffectComposer(renderer);
  composer.setPixelRatio(1); // ensure pixel ratio is always 1 for performance reasons
  ssaaRenderPassP = new SSAARenderPass(scene, cameraP);
  composer.addPass(ssaaRenderPassP);
  ssaaRenderPassO = new SSAARenderPass(scene, cameraO);
  composer.addPass(ssaaRenderPassO);
  copyPass = new ShaderPass(CopyShader);
  composer.addPass(copyPass);

  window.addEventListener("resize", onWindowResize);
}

function onWindowResize() {
  const width = window.innerWidth;
  const height = window.innerHeight;
  const aspect = width / height;

  cameraP.aspect = aspect;
  cameraP.setViewOffset(width, height, params.viewOffset, 0, width, height);
  cameraO.updateProjectionMatrix();

  cameraO.left = -height * aspect;
  cameraO.right = height * aspect;
  cameraO.top = height;
  cameraO.bottom = -height;
  cameraO.updateProjectionMatrix();

  renderer.setSize(width, height);
  composer.setSize(width, height);
}

function animate() {
  requestAnimationFrame(animate);

  stats.begin();

  if (params.autoRotate) {
    for (let i = 0; i < scene.children.length; i++) {
      const child = scene.children[i];

      child.rotation.x += 0.005;
      child.rotation.y += 0.01;
    }
  }

  let newColor = ssaaRenderPassP.clearColor;

  switch (params.clearColor) {
    case "blue":
      newColor = 0x0000ff;
      break;
    case "red":
      newColor = 0xff0000;
      break;
    case "green":
      newColor = 0x00ff00;
      break;
    case "white":
      newColor = 0xffffff;
      break;
    case "black":
      newColor = 0x000000;
      break;
  }

  ssaaRenderPassP.clearColor = ssaaRenderPassO.clearColor = newColor;
  ssaaRenderPassP.clearAlpha = ssaaRenderPassO.clearAlpha = params.clearAlpha;

  ssaaRenderPassP.sampleLevel = ssaaRenderPassO.sampleLevel =
    params.sampleLevel;
  ssaaRenderPassP.unbiased = ssaaRenderPassO.unbiased = params.unbiased;

  ssaaRenderPassP.enabled = params.camera === "perspective";
  ssaaRenderPassO.enabled = params.camera === "orthographic";

  copyPass.enabled = !params.renderToScreen;

  cameraP.view.offsetX = params.viewOffsetX;

  composer.render();

  stats.end();
}
